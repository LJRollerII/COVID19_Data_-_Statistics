<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='COVID-19DataStatisticsDashboard' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='infectionct_populationpct_date' inline='true' name='federated.03mcoda09rn83n1g2wsjg1cdafv5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='infectionct_populationpct_date' name='textscan.0tf93jx06uzxn417jvf3q1mbhrk2'>
            <connection class='textscan' directory='C:/Users/ljcoo/Coding/Projects/COVID19_Data_Statistics/data' filename='infectionct_populationpct_date.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0tf93jx06uzxn417jvf3q1mbhrk2' name='infectionct_populationpct_date.csv' table='[infectionct_populationpct_date#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_infectioncount' ordinal='3' />
            <column datatype='real' name='covidpop_percentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0tf93jx06uzxn417jvf3q1mbhrk2' name='infectionct_populationpct_date.csv' table='[infectionct_populationpct_date#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_infectioncount' ordinal='3' />
            <column datatype='real' name='covidpop_percentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[infectionct_populationpct_date.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[infectionct_populationpct_date.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionct_populationpct_date.csv_55C27003E8E8487699952D3C20752727]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[infectionct_populationpct_date.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionct_populationpct_date.csv_55C27003E8E8487699952D3C20752727]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[infectionct_populationpct_date.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionct_populationpct_date.csv_55C27003E8E8487699952D3C20752727]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infectioncount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infectioncount]</local-name>
            <parent-name>[infectionct_populationpct_date.csv]</parent-name>
            <remote-alias>highest_infectioncount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionct_populationpct_date.csv_55C27003E8E8487699952D3C20752727]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>covidpop_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[covidpop_percentage]</local-name>
            <parent-name>[infectionct_populationpct_date.csv]</parent-name>
            <remote-alias>covidpop_percentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionct_populationpct_date.csv_55C27003E8E8487699952D3C20752727]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='infectionct_populationpct_date.csv' datatype='table' name='[__tableau_internal_object_id__].[infectionct_populationpct_date.csv_55C27003E8E8487699952D3C20752727]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[covidpop_percentage]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Highest Infectioncount' datatype='integer' name='[highest_infectioncount]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ljcoo/OneDrive/Documents/My Tableau Repository/Datasources/infectionct_populationpct_date.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2022 12:59:11 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='infectionct_populationpct_date' increment-value='%null%' refresh-type='create' rows-inserted='82623' timestamp-start='2022-10-19 00:59:10.051' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>infectionct_populationpct_date.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>infectionct_populationpct_date.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>infectionct_populationpct_date.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1270</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infectioncount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infectioncount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infectioncount</remote-alias>
              <ordinal>3</ordinal>
              <family>infectionct_populationpct_date.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19117</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>covidpop_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[covidpop_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>covidpop_percentage</remote-alias>
              <ordinal>4</ordinal>
              <family>infectionct_populationpct_date.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35561</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='infectionct_populationpct_date.csv' id='infectionct_populationpct_date.csv_55C27003E8E8487699952D3C20752727'>
            <properties context=''>
              <relation connection='textscan.0tf93jx06uzxn417jvf3q1mbhrk2' name='infectionct_populationpct_date.csv' table='[infectionct_populationpct_date#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='highest_infectioncount' ordinal='3' />
                  <column datatype='real' name='covidpop_percentage' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='total_global_covid_number' inline='true' name='federated.0x8b5gd16pj54618ulhp11ko9xzr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='total_global_covid_number' name='textscan.1dq4ptu0s46rri14ki7u11mon9fn'>
            <connection class='textscan' directory='C:/Users/ljcoo/Coding/Projects/COVID19_Data_Statistics/data' filename='total_global_covid_number.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1dq4ptu0s46rri14ki7u11mon9fn' name='total_global_covid_number.csv' table='[total_global_covid_number#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1dq4ptu0s46rri14ki7u11mon9fn' name='total_global_covid_number.csv' table='[total_global_covid_number#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[total_global_covid_number.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[total_global_covid_number.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_global_covid_number.csv_FBAD9A4D35F8436794E5ED89CA154DCA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[total_global_covid_number.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_global_covid_number.csv_FBAD9A4D35F8436794E5ED89CA154DCA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percentage]</local-name>
            <parent-name>[total_global_covid_number.csv]</parent-name>
            <remote-alias>death_percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_global_covid_number.csv_FBAD9A4D35F8436794E5ED89CA154DCA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='total_global_covid_number.csv' datatype='table' name='[__tableau_internal_object_id__].[total_global_covid_number.csv_FBAD9A4D35F8436794E5ED89CA154DCA]' role='measure' type='quantitative' />
      <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ljcoo/OneDrive/Documents/My Tableau Repository/Datasources/total_global_covid_number.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2022 12:58:23 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='total_global_covid_number' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2022-10-19 00:58:23.249' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>total_global_covid_number.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>total_global_covid_number.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death_percentage</remote-alias>
              <ordinal>2</ordinal>
              <family>total_global_covid_number.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='total_global_covid_number.csv' id='total_global_covid_number.csv_FBAD9A4D35F8436794E5ED89CA154DCA'>
            <properties context=''>
              <relation connection='textscan.1dq4ptu0s46rri14ki7u11mon9fn' name='total_global_covid_number.csv' table='[total_global_covid_number#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='death_percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='population_infected_pct' inline='true' name='federated.1q669xl10hst7m1c9quja05garoq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='population_infected_pct' name='textscan.0i9uea315mzbtx19bmvpb14icodz'>
            <connection class='textscan' directory='C:/Users/ljcoo/Coding/Projects/COVID19_Data_Statistics/data' filename='population_infected_pct.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0i9uea315mzbtx19bmvpb14icodz' name='population_infected_pct.csv' table='[population_infected_pct#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_infectioncount' ordinal='2' />
            <column datatype='real' name='covidpop_percentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0i9uea315mzbtx19bmvpb14icodz' name='population_infected_pct.csv' table='[population_infected_pct#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_infectioncount' ordinal='2' />
            <column datatype='real' name='covidpop_percentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_infected_pct.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[population_infected_pct.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_infected_pct.csv_6753BDB16EA54668801D77C84FEC133F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[population_infected_pct.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_infected_pct.csv_6753BDB16EA54668801D77C84FEC133F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infectioncount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infectioncount]</local-name>
            <parent-name>[population_infected_pct.csv]</parent-name>
            <remote-alias>highest_infectioncount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_infected_pct.csv_6753BDB16EA54668801D77C84FEC133F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>covidpop_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[covidpop_percentage]</local-name>
            <parent-name>[population_infected_pct.csv]</parent-name>
            <remote-alias>covidpop_percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_infected_pct.csv_6753BDB16EA54668801D77C84FEC133F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='population_infected_pct.csv' datatype='table' name='[__tableau_internal_object_id__].[population_infected_pct.csv_6753BDB16EA54668801D77C84FEC133F]' role='measure' type='quantitative' />
      <column caption='Covidpop Percentage' datatype='real' name='[covidpop_percentage]' role='measure' type='quantitative' />
      <column caption='Highest Infectioncount' datatype='integer' name='[highest_infectioncount]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ljcoo/OneDrive/Documents/My Tableau Repository/Datasources/population_infected_pct.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2022 12:58:53 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='population_infected_pct' increment-value='%null%' refresh-type='create' rows-inserted='198' timestamp-start='2022-10-19 00:58:52.385' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>population_infected_pct.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>198</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>population_infected_pct.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>198</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infectioncount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infectioncount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infectioncount</remote-alias>
              <ordinal>2</ordinal>
              <family>population_infected_pct.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>197</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>covidpop_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[covidpop_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>covidpop_percentage</remote-alias>
              <ordinal>3</ordinal>
              <family>population_infected_pct.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>198</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='population_infected_pct.csv' id='population_infected_pct.csv_6753BDB16EA54668801D77C84FEC133F'>
            <properties context=''>
              <relation connection='textscan.0i9uea315mzbtx19bmvpb14icodz' name='population_infected_pct.csv' table='[population_infected_pct#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='highest_infectioncount' ordinal='2' />
                  <column datatype='real' name='covidpop_percentage' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='total_deathcount_continent' inline='true' name='federated.1yay1iu1a0nktw1bqih6s0wybles' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='total_deathcount_continent' name='textscan.052lmmr0zms5yw19xq5vp1geqklg'>
            <connection class='textscan' directory='C:/Users/ljcoo/Coding/Projects/COVID19_Data_Statistics/data' filename='total_deathcount_continent.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.052lmmr0zms5yw19xq5vp1geqklg' name='total_deathcount_continent.csv' table='[total_deathcount_continent#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_deathcount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.052lmmr0zms5yw19xq5vp1geqklg' name='total_deathcount_continent.csv' table='[total_deathcount_continent#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_deathcount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[total_deathcount_continent.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[total_deathcount_continent.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_deathcount_continent.csv_4C0B059C05494289B16FA84C804DC954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deathcount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deathcount]</local-name>
            <parent-name>[total_deathcount_continent.csv]</parent-name>
            <remote-alias>total_deathcount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_deathcount_continent.csv_4C0B059C05494289B16FA84C804DC954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='total_deathcount_continent.csv' datatype='table' name='[__tableau_internal_object_id__].[total_deathcount_continent.csv_4C0B059C05494289B16FA84C804DC954]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Death Count' datatype='integer' name='[total_deathcount]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ljcoo/OneDrive/Documents/My Tableau Repository/Datasources/total_deathcount_continent.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2022 12:58:38 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='total_deathcount_continent' increment-value='%null%' refresh-type='create' rows-inserted='6' timestamp-start='2022-10-19 00:58:37.402' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>total_deathcount_continent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_deathcount_continent.csv_4C0B059C05494289B16FA84C804DC954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deathcount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deathcount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deathcount</remote-alias>
              <ordinal>1</ordinal>
              <family>total_deathcount_continent.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_deathcount_continent.csv_4C0B059C05494289B16FA84C804DC954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='total_deathcount_continent.csv' id='total_deathcount_continent.csv_4C0B059C05494289B16FA84C804DC954'>
            <properties context=''>
              <relation connection='textscan.052lmmr0zms5yw19xq5vp1geqklg' name='total_deathcount_continent.csv' table='[total_deathcount_continent#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_deathcount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='COVID-19 Death Count By Continent'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>COVID-19 Death Count Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='total_deathcount_continent' name='federated.1yay1iu1a0nktw1bqih6s0wybles' />
          </datasources>
          <datasource-dependencies datasource='federated.1yay1iu1a0nktw1bqih6s0wybles'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deathcount]' derivation='Sum' name='[sum:total_deathcount:qk]' pivot='key' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[total_deathcount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1yay1iu1a0nktw1bqih6s0wybles].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yay1iu1a0nktw1bqih6s0wybles].[none:location:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#39b8e6' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yay1iu1a0nktw1bqih6s0wybles].[sum:total_deathcount:qk]</rows>
        <cols>[federated.1yay1iu1a0nktw1bqih6s0wybles].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{16C4BFDA-F85D-4075-B000-8D72C75DC7C9}' />
    </worksheet>
    <worksheet name='Global Numbers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='total_global_covid_number' name='federated.0x8b5gd16pj54618ulhp11ko9xzr' />
          </datasources>
          <datasource-dependencies datasource='federated.0x8b5gd16pj54618ulhp11ko9xzr'>
            <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
            <column-instance column='[death_percentage]' derivation='Sum' name='[sum:death_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8b5gd16pj54618ulhp11ko9xzr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0x8b5gd16pj54618ulhp11ko9xzr].[sum:death_percentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0x8b5gd16pj54618ulhp11ko9xzr].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0x8b5gd16pj54618ulhp11ko9xzr].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0x8b5gd16pj54618ulhp11ko9xzr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0x8b5gd16pj54618ulhp11ko9xzr].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0x8b5gd16pj54618ulhp11ko9xzr].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0x8b5gd16pj54618ulhp11ko9xzr].[sum:death_percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0x8b5gd16pj54618ulhp11ko9xzr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0x8b5gd16pj54618ulhp11ko9xzr].[:Measure Names]' value='196' />
            <format attr='height' value='72' />
            <format attr='text-format' field='[federated.0x8b5gd16pj54618ulhp11ko9xzr].[sum:death_percentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#39b8e6' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e6e6e6' />
            <format attr='background-color' data-class='total' scope='rows' value='#e6e6e6' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0x8b5gd16pj54618ulhp11ko9xzr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.2430939674377441' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0x8b5gd16pj54618ulhp11ko9xzr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{827D0D9C-AA21-4C28-8FF3-30D350F09BE7}' />
    </worksheet>
    <worksheet name='Percent Population Infected'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='infectionct_populationpct_date' name='federated.03mcoda09rn83n1g2wsjg1cdafv5' />
          </datasources>
          <datasource-dependencies datasource='federated.03mcoda09rn83n1g2wsjg1cdafv5'>
            <column-instance column='[covidpop_percentage]' derivation='Avg' name='[avg:covidpop_percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Population Infected' datatype='real' name='[covidpop_percentage]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[covidpop_percentage]' derivation='Avg' forecast-column-base='[avg:covidpop_percentage:qk]' forecast-column-type='forecast-value' name='[fVal:avg:covidpop_percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.03mcoda09rn83n1g2wsjg1cdafv5].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.03mcoda09rn83n1g2wsjg1cdafv5].[tmn:date:qk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:location:nk]' />
              <text column='[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:location:nk]' />
              <text column='[federated.03mcoda09rn83n1g2wsjg1cdafv5].[fVal:avg:covidpop_percentage:qk]' />
              <color column='[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03mcoda09rn83n1g2wsjg1cdafv5].[fVal:avg:covidpop_percentage:qk]</rows>
        <cols>[federated.03mcoda09rn83n1g2wsjg1cdafv5].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{6B2971B2-CE63-4E1B-8255-EC0145309FC5}' />
    </worksheet>
    <worksheet name='Percent Population Infected Per Country Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population_infected_pct' name='federated.1q669xl10hst7m1c9quja05garoq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1q669xl10hst7m1c9quja05garoq'>
            <column caption='Covidpop Percentage' datatype='real' name='[covidpop_percentage]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[covidpop_percentage]' derivation='Sum' name='[sum:covidpop_percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1q669xl10hst7m1c9quja05garoq].[Longitude (generated)]' field-type='quantitative' max='5603931.3184417225' min='-11692597.556926908' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1q669xl10hst7m1c9quja05garoq].[Latitude (generated)]' field-type='quantitative' max='8036607.1196955182' min='-1982147.051699101' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1q669xl10hst7m1c9quja05garoq].[sum:covidpop_percentage:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1q669xl10hst7m1c9quja05garoq].[sum:covidpop_percentage:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1q669xl10hst7m1c9quja05garoq].[none:location:nk]' />
              <color column='[federated.1q669xl10hst7m1c9quja05garoq].[sum:covidpop_percentage:qk]' />
              <geometry column='[federated.1q669xl10hst7m1c9quja05garoq].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1q669xl10hst7m1c9quja05garoq].[Latitude (generated)]</rows>
        <cols>[federated.1q669xl10hst7m1c9quja05garoq].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{08E88E90-A330-426C-9E59-AE3CA5135586}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='COVID-19 Data &amp; Statistics'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98370' id='9' param='horz' type-v2='layout-flow' w='99034' x='483' y='815'>
            <zone h='98370' id='7' type-v2='layout-basic' w='89378' x='483' y='815'>
              <zone h='24593' id='3' name='Global Numbers' w='44689' x='483' y='815'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27905' id='5' name='COVID-19 Death Count By Continent' w='44689' x='483' y='25408'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52498' id='6' name='Percent Population Infected Per Country Map' w='44689' x='45172' y='815'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45872' id='11' name='Percent Population Infected' w='79722' x='483' y='53313'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45872' id='12' name='Percent Population Infected' pane-specification-id='0' param='[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:location:nk]&#10;[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:Forecast Indicator:nk]' type-v2='color' w='9656' x='80205' y='53313'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98370' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='815'>
              <zone h='7441' id='10' name='Percent Population Infected Per Country Map' pane-specification-id='0' param='[federated.1q669xl10hst7m1c9quja05garoq].[sum:covidpop_percentage:qk]' type-v2='color' w='9656' x='89861' y='815'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='58' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98370' id='57' param='vert' type-v2='layout-flow' w='99034' x='483' y='815'>
                <zone fixed-size='188' h='24593' id='3' is-fixed='true' name='Global Numbers' w='44689' x='483' y='815'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52498' id='6' is-fixed='true' name='Percent Population Infected Per Country Map' w='44689' x='45172' y='815'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7441' id='10' name='Percent Population Infected Per Country Map' pane-specification-id='0' param='[federated.1q669xl10hst7m1c9quja05garoq].[sum:covidpop_percentage:qk]' type-v2='color' w='9656' x='89861' y='815'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='27905' id='5' is-fixed='true' name='COVID-19 Death Count By Continent' w='44689' x='483' y='25408'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45872' id='11' is-fixed='true' name='Percent Population Infected' w='79722' x='483' y='53313'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='45872' id='12' name='Percent Population Infected' pane-specification-id='0' param='[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:location:nk]&#10;[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:Forecast Indicator:nk]' type-v2='color' w='9656' x='80205' y='53313'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{93A1E6E0-AD8B-46EF-ABF7-46E0E0B42463}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Global Numbers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8b5gd16pj54618ulhp11ko9xzr].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11802DF9-7DAE-40A8-967B-FEC398BEDAE9}' />
    </window>
    <window class='worksheet' name='COVID-19 Death Count By Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yay1iu1a0nktw1bqih6s0wybles].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D1B7251-4779-46F1-A1F6-4BDC8B9B3B3A}' />
    </window>
    <window class='worksheet' name='Percent Population Infected Per Country Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1q669xl10hst7m1c9quja05garoq].[sum:covidpop_percentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1q669xl10hst7m1c9quja05garoq].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6E853F1C-A765-4507-8F05-1E90A87D7031}' />
    </window>
    <window class='worksheet' name='Percent Population Infected'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:location:nk]&#10;[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.03mcoda09rn83n1g2wsjg1cdafv5].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:Forecast Indicator:nk]</field>
            <field>[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:location:nk]</field>
            <field>[federated.03mcoda09rn83n1g2wsjg1cdafv5].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD8DDF86-3C7F-4C98-A3F2-43C3656E0D00}' />
    </window>
    <window class='dashboard' maximized='true' name='COVID-19 Data &amp; Statistics'>
      <viewpoints>
        <viewpoint name='COVID-19 Death Count By Continent'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Numbers' />
        <viewpoint name='Percent Population Infected'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:Forecast Indicator:nk]</field>
              <field>[federated.03mcoda09rn83n1g2wsjg1cdafv5].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Percent Population Infected Per Country Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{DBF87CDB-D7FC-4763-A9BA-EF1475488DF1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COVID-19 Data &amp; Statistics' width='192'>
      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
      xWR3aGle+/9n+hkU0+TvOQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='COVID-19 Death Count By Continent' width='192'>
      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
      AEnt/+Ys904CT0D1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='149' name='Global Numbers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percent Population Infected' width='192'>
      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
      ANHQ/j/ty/t+9fDUkQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Percent Population Infected Per Country Map' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
